task_templates:
- &install-deps
  task: install-dependencies
  file: concourse-tasks/tasks/install-deps.yml
- &test-code
  task: run-unit-tests
  input_mapping:
    code-base: code-with-dependencies
  params:
    CODECOV_TOKEN: ((codecov-token))
  file: concourse-tasks/tasks/unit-tests.yml
- &build-linux
  task: build-linux
  file: concourse-tasks/tasks/build.yml
  input_mapping:
    code-base: code-with-dependencies
  params:
    TC_HELP_DESK_TOKEN: ((help-desk-token))
    PLATFORM: linux
  on_success:
    do:
    - put: upload
      params:
        file: build/linux/*
        acl: public-read
- &build-macos
  task: build-macos
  file: concourse-tasks/tasks/build.yml
  input_mapping:
    code-base: code-with-dependencies
  params:
    TC_HELP_DESK_TOKEN: ((help-desk-token))
    PLATFORM: macos
  on_success:
    do:
    - put: upload
      params:
        file: build/macos/*
        acl: public-read
- &build-windows
  task: build-windows
  file: concourse-tasks/tasks/build.yml
  input_mapping:
    code-base: code-with-dependencies
  params:
    TC_HELP_DESK_TOKEN: ((help-desk-token))
    PLATFORM: windows
  on_success:
    do:
    - put: upload
      params:
        file: build/windows/x64/*
        acl: public-read
    - put: upload
      params:
        file: build/windows/x32/*
        acl: public-read

groups:
- name: develop
  jobs:
  - test-develop
  - build-develop
- name: pull requests
  jobs:
  - test-pr
  - build-pr

resource_types:
- name: pull-request
  type: docker-image
  source:
    repository: jtarchie/pr
- name: slack-notification
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource
    tag: latest
- name: s3-folder
  type: docker-image
  source:
    repository: 18fgsa/s3-resource-simple

resources:
- name: notify
  type: slack-notification
  source:
    url: ((slack-webhook))
- name: develop-branch
  type: git
  source:
    uri: https://github.com/unfoldingWord-dev/translationCore
    branch: develop
- name: concourse-tasks
  type: git
  source:
    uri: https://github.com/neutrinog/concourse-tasks
    branch: master
- name: prs-to-develop
  type: pull-request
  source:
    access_token: ((github-token))
    private_key: ((github-private-key))
    repo: unfoldingWord-dev/translationCore
    base: develop
    ci_skip: true
    authorship_restriction: true
- name: upload-develop
  type: s3-folder
  source:
    bucket: tc-builds.door43.org
    path: develop
    access_key_id: ((aws-access-id))
    secret_access_key: ((aws-secret-key))
    region: us-west-2
    options:
      - "--exclude '*'"
      - "--include 'build/*'"
- name: upload
  type: s3
  source:
    bucket: tc-builds.door43.org
    regexp: translationCore-(.*)-(.*)-(?P<version>.*)\.(.*)
    access_key_id: ((aws-access-id))
    secret_access_key: ((aws-secret-key))
    region_name: us-west-2

jobs:
# test develop branch
- name: test-develop
  serial: true
  public: false
  plan:
  - get: concourse-tasks
  - get: code-base
    resource: develop-branch
    trigger: true
    version: latest
  - *install-deps
  - *test-code

# build develop branch
- name: build-develop
  serial: true
  public: false
  plan:
  - get: code-base
    resource: develop-branch
    trigger: true
    passed:
      - test-develop
  - get: concourse-tasks
  - task: record source branch
    file: concourse-tasks/tasks/add-build-comment.yml
    params:
      text: "From the `develop` branch:"
  - do:
    - *install-deps
    - *build-linux
    - *build-macos
    - *build-windows
    on_failure:
      do:
      - task: record failure
        file: concourse-tasks/tasks/add-build-comment.yml
        params:
          text: "Some builds failed"
      - put: notify
        params:
          text_file: build_meta/notification.txt
    on_success:
      put: notify
      params:
        text_file: build_meta/notification.txt

# test pull requests
- name: test-pr
  public: false
  serial: true
  plan:
  - get: code-base
    resource: prs-to-develop
    trigger: true
    version: every
  - get: concourse-tasks
  - do:
    - put: prs-to-develop
      params:
        path: code-base
        context: unit-tests
        status: pending
    - *install-deps
    - *test-code
    on_success:
      put: prs-to-develop
      params:
        path: code-base
        context: unit-tests
        status: success
    on_failure:
      put: prs-to-develop
      params:
        path: code-base
        context: unit-tests
        status: failure

# build pull request
- name: build-pr
  public: false
  serial: true
  plan:
  - get: code-base
    resource: prs-to-develop
    trigger: true
    version: every
    passed:
      - test-pr
  - get: concourse-tasks
  - do:
    - put: prs-to-develop
      params:
        path: code-base
        context: build
        status: pending
    - *install-deps
    - *build-linux
    - *build-macos
    - *build-windows
    on_failure:
      do:
      - task: record failure
        file: concourse-tasks/tasks/add-build-comment.yml
        params:
          text: "Some builds failed"
      - put: prs-to-develop
        params:
          path: code-base
          context: build
          comment: build_meta/comment.md
          status: failure
    on_success:
      put: prs-to-develop
      params:
        path: code-base
        context: build
        comment: build_meta/comment.md
        status: success

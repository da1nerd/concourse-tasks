groups:
- name: develop
  jobs:
  - Test Develop
  - Build Develop
- name: pull requests
  jobs:
  - Test PR
  - Build PR

resource_types:
- name: pull-request
  type: docker-image
  source:
    repository: jtarchie/pr
- name: slack-notification
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource
    tag: latest

resources:
- name: notify
  type: slack-notification
  source:
    url: ((slack-webhook))
- name: develop-branch
  type: git
  source:
    uri: https://github.com/unfoldingWord-dev/translationCore
    branch: develop
- name: concourse-tasks
  type: git
  source:
    uri: https://github.com/neutrinog/concourse-tasks
    branch: master
- name: develop-pull-requests
  type: pull-request
  source:
    access_token: ((github-token))
    private_key: ((github-private-key))
    repo: unfoldingWord-dev/translationCore
    base: develop
- name: upload
  type: s3
  source:
    bucket: tc-builds.door43.org
    regexp: translationCore-(.*)-(.*)-(?P<version>.*)\.(.*)
    access_key_id: ((aws-access-id))
    secret_access_key: ((aws-secret-key))
    region_name: us-west-2

jobs:
# test develop branch
- name: Test Develop
  public: true
  plan:
  - get: concourse-tasks
  - get: develop-branch
    trigger: true
  - task: run-unit-tests
    input_mapping:
      code-base: develop-branch
    file: concourse-tasks/tasks/unit-tests.yml

# build develop branch
- name: Build Develop
  public: true
  plan:
  - get: code-base
    resource: develop-branch
    trigger: true
    passed:
      - Test Develop
  - get: concourse-tasks
  - task: record source branch
    file: concourse-tasks/tasks/add-build-comment.yml
    params:
      text: "From the `develop` branch:"
  - task: build-linux
    file: concourse-tasks/tasks/build.yml
    params:
      PLATFORM: linux
    on_success:
      do:
      - put: upload
        params:
          file: build/linux/*
          acl: public-read
      - put: notify
        params:
          text_file: build_meta/notification.txt

# test pull requests
- name: Test PR
  public: true
  plan:
  - get: develop-pull-requests
    trigger: true
    version: every
  - get: concourse-tasks
  - task: show-pending
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: busybox
      run:
        path: echo
        args: [setting pending status]
    on_success:
      put: develop-pull-requests
      params:
        path: develop-pull-requests
        context: unit-tests
        status: pending
  - task: test-pull-request
    input_mapping:
      code-base: develop-pull-requests
    file: concourse-tasks/tasks/unit-tests.yml
    on_success:
      put: develop-pull-requests
      params:
        path: develop-pull-requests
        context: unit-tests
        status: success
    on_failure:
      put: develop-pull-requests
      params:
        path: develop-pull-requests
        context: unit-tests
        status: failure

# build pull request
- name: Build PR
  public: true
  plan:
  - get: code-base
    resource: develop-pull-requests
    trigger: true
    version: every
    passed:
      - Test PR
  - get: concourse-tasks
  - do:
    - put: develop-pull-requests
      params:
        path: code-base
        context: build
        status: pending
  - do:
    - task: install-dependencies
      file: concourse-tasks/tasks/install-deps.yml
    - task: build-linux
      file: concourse-tasks/tasks/build.yml
      input_mapping:
        code-base: code-with-dependencies
      params:
        PLATFORM: linux
      on_success:
        do:
        - put: upload
          params:
            file: build/linux/*
            acl: public-read
    - task: build-macos
      file: concourse-tasks/tasks/build.yml
      input_mapping:
        code-base: code-with-dependencies
      params:
        PLATFORM: macos
      on_success:
        do:
        - put: upload
          params:
            file: build/macos/*
            acl: public-read
    - task: build-windows
      file: concourse-tasks/tasks/build.yml
      input_mapping:
        code-base: code-with-dependencies
      params:
        PLATFORM: windows
      on_success:
        do:
        - put: upload
          params:
            file: build/windows/x64/*
            acl: public-read
        - put: upload
          params:
            file: build/windows/x32/*
            acl: public-read
    on_failure:
      do:
      - task: record failure
        file: concourse-tasks/tasks/add-build-comment.yml
        params:
          text: "Some builds failed"
      - put: develop-pull-requests
        params:
          path: develop-pull-requests
          context: build
          comment: build_meta/comment.md
          status: failure
    on_success:
      put: develop-pull-requests
      params:
        path: develop-pull-requests
        context: build
        comment: build_meta/comment.md
        status: success
